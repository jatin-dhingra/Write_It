{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDelete","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","cols","rows","placeholder","onChange","event","target","value","length","trim","NotesList","notes","map","note","Search","handleSearch","type","Header","handleToggleDarkMode","style","color","previousDarkMode","App","nanoid","setNotes","searchNote","setSearchNote","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1fdeda.chunk.js","sourcesContent":["import React from 'react'\nimport {MdDeleteForever} from 'react-icons/md'\n{/*this is our note card component\nhere am using id,text,date,handleDeleteNote as props which have been defined in App.js*/}\n\nfunction Note({id,text,date,handleDelete}) {\n    return (\n        <div className=\"note\">\n        {/*This part will contain the main note's text part*/}\n            <span>{text}</span>\n            {/*in the footer part of the note*/}\n            \n            <div className=\"note-footer\">\n            {/*it will store date on which the user is going to create the note*/} \n                <small>{date}</small>\n                {/*this is for deleting the note using each note's unique id as parameter\n                so we have passed handleDeleteNote function as it's onClick event*/}\n                <MdDeleteForever onClick={()=>handleDelete(id)} className=\"delete-icon\" size=\"1.3em\" />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Note\n","import React,{useState} from 'react'\n{/*this component is for adding new note in our notes application*/}\nfunction AddNote({handleAddNote}) {\n{/*this noteText is the value for adding Note input*/}\n    const [noteText,setNoteText] = useState('');\n    \n    const charLimit = 300;\n   \n    const handleChange =(event)=>{\n  \n    if(charLimit - event.target.value.length>=0){\n        setNoteText(event.target.value)\n    }\n   \n    }\n    \n    \n    const handleSaveClick =() =>{\n    {/*if there's no character in input , then we will not save the note*/}\n        if(noteText.trim().length>0){\n            handleAddNote(noteText);\n            setNoteText('');\n        }\n       \n    }\n    return (\n        <div className=\"note new\">\n        {/*the text area for our input*/}\n            <textarea  cols=\"10\" rows=\"8\" placeholder=\"Type to add a new note...\"\n            onChange={handleChange} value={noteText}\n            ></textarea>\n            <div className=\"note-footer\">\n                <small>{charLimit - noteText.length} Remaining</small>\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote\n","import React from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote'\n{/* this component is storing the notes in a format*/}\n\nconst NotesList=({notes,handleAddNote,handleDelete}) =>{\n    return (\n        <div className=\"notes-list\">\n        {/*here we are going to use .map to make each note card from notes\n        and also passing the functions and other states as propas*/}\n           {notes.map((note)=>\n               <Note id={note.id} text={note.text} date={note.date}\n               handleDelete={handleDelete}\n               />\n           )}\n           <AddNote handleAddNote={handleAddNote}/>\n        </div>\n    )\n}\n\nexport default NotesList\n","import React from 'react'\nimport {MdSearch} from \"react-icons/md\"\n\nfunction Search({handleSearch}) {\n    return (\n        <div className=\"search\">\n      \n            <MdSearch className=\"search-icon\" size=\"1.4em\"/>\n            \n            <input type=\"text\" placeholder=\"Search for your notes...\" onChange={(event)=>handleSearch(event.target.value)}/>\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Header = ({handleToggleDarkMode}) => {\n    return (\n        <div className=\"header\">\n             {/*the heading of our notes app*/}\n        <h1><span style={{color:\"#fca311\"}}>React</span> Notes</h1>\n         {/*this is our toggle button \n        using this button we can change the background theme for our application*/}\n        <button onClick={()=>handleToggleDarkMode((previousDarkMode)=>!previousDarkMode)} className=\"save\">Light/Dark Mode</button>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState,useEffect } from 'react'\nimport NotesList from './components/NotesList'\nimport {nanoid} from 'nanoid'\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nfunction App() {\n  const [notes,setNotes] = useState([\n    {\n    id: nanoid(),\n    text:\"JATINNNNNNN\",\n    date:\"02/15/2022\"\n  },\n  {\n    id: nanoid(),\n    text:\"Jatin Dhingra\",\n    date:\"03/19/2022\"\n  },\n  \n \n]);\n\n\nconst [searchNote,setSearchNote] = useState('');\nconst [darkMode,setDarkMode] = useState(false)\nuseEffect(()=>{\n  const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'))\n  if(savedNotes){\n    setNotes(savedNotes)\n  }\n},[])\nuseEffect(()=>{\n  localStorage.setItem('react-notes-app-data',JSON.stringify(notes))\n},[notes])\nconst addNote = (text) =>{\n  \n  const date = new Date();\n  const newNote = {\n    id:nanoid(),\n    text : text,\n    date : date.toLocaleDateString()\n  }\n  const newNotes = [...notes,newNote]\n  setNotes(newNotes)\n}\nconst deletingNote = (id) =>{\n const newNotes = notes.filter((note)=> note.id!==id);\n setNotes(newNotes)\n}\n  return (\n  \n    <div className={`${darkMode && 'dark-mode'}`}>\n          <div className=\"container\">\n      <Header handleToggleDarkMode={setDarkMode}/>\n\n      <Search handleSearch={setSearchNote}/>\n      \n      <NotesList notes={notes.filter((note)=>note.text.toLowerCase().includes(searchNote))} handleAddNote={addNote} handleDelete={deletingNote}/>\n\n    </div>\n    </div>\n\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}